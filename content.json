{"meta":{"title":"海斯的小黑屋","subtitle":"","description":"","author":"海斯","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"Hexo博客系统","slug":"Hexo博客系统","date":"2020-09-29T07:43:00.000Z","updated":"2020-09-29T08:34:13.018Z","comments":true,"path":"2020/09/29/Hexo博客系统/","link":"","permalink":"http://example.com/2020/09/29/Hexo%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F/","excerpt":"","text":"Hexo博客系统创建使用和Github 详细教程参考 参考Hexo相关教程 常用命令1234567hexo new &quot;postName&quot; #新建文章hexo new page &quot;pageName&quot; #新建页面hexo generate #生成静态页面至public目录hexo server #开启预览访问端口（默认端口4000，&#x27;ctrl + c&#x27;关闭server）hexo deploy #部署到GitHubhexo help # 查看帮助hexo version #查看Hexo的版本 12345以上命令可缩写如下：hexo n == hexo newhexo g == hexo generatehexo s == hexo serverhexo d == hexo deploy 123生成命令：hexo s -g #生成并本地预览hexo d -g #生成并上传","categories":[],"tags":[]},{"title":"Git入门","slug":"Git入门","date":"2020-09-29T05:39:00.000Z","updated":"2020-09-29T05:56:13.032Z","comments":true,"path":"2020/09/29/Git入门/","link":"","permalink":"http://example.com/2020/09/29/Git%E5%85%A5%E9%97%A8/","excerpt":"","text":"Git项目首次创建12345678910111213下载并安装Git https://git-scm.com/创建项目本地目录WIN/Linux/Mac 终端进入创建的本地目录git config --global user.name &#x27;yourname&#x27;git config --global user.email &#x27;youremail&#x27;git config -l 检查配置git init 初始化仓库git remote add origin https://XXX.git 关联git仓库开始创建和编写项目git status 查看本地文件更改变化git add *(或者 -A) 返回到项目根目录添加所有更改git commit -m &#x27;注释&#x27; 注释当前更改内容git push origin master 推动到远端 克隆项目到本地修改后上传合并123456git clone https://xxx.git进入项目修改..git status 查看本地文件更改git add * 添加所有更改git commit -m &#x27;注释&#x27; 注释更改的内容git push origin master 推动到远端","categories":[],"tags":[]},{"title":"Mysql入门","slug":"Mysql","date":"2020-09-29T05:38:00.000Z","updated":"2020-09-29T05:55:59.712Z","comments":true,"path":"2020/09/29/Mysql/","link":"","permalink":"http://example.com/2020/09/29/Mysql/","excerpt":"","text":"登录MySQL1mysql -u root -p12345612 退出MySQL数据库服务器1exit; Mysql外部连接常见问题12345678910111213141516-- 授权给所有IPGRANT ALL PRIVILEGES ON *.* TO &#x27;root&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;youpassword&#x27; WITH GRANT OPTION;FLUSH PRIVILEGES;-- 授权给某ipGRANT ALL PRIVILEGES ON *.* TO &#x27;root&#x27;@&#x27;your ip&#x27; IDENTIFIED BY &#x27;youpassword&#x27; WITH GRANT OPTION;FLUSH PRIVILEGES;-- 远程工具连接出现错误 2003- Can&#x27;t connect MySQL Server on &#x27;localhost&#x27;(10038)/etc/mysql/mysql.cnf中 注释掉 bind-address = 127.0.0.1 (如果找不到可能在/etc/mysql/mysql.conf.d/mysqld.cnf)重启mysql服务-- Error Code: 1251 Client does not support authentication protocol requested by server; consider upgrading MySQL clientALTER USER &#x27;root&#x27;@&#x27;%&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;密码&#x27;;FLUSH PRIVILEGES; 基本语法12345678910111213141516171819202122232425262728293031323334353637383940-- 显示所有数据库show databases;-- 创建数据库CREATE DATABASE test;-- 切换数据库use test;-- 显示数据库中的所有表show tables;-- 创建数据表CREATE TABLE pet ( name VARCHAR(20), owner VARCHAR(20), species VARCHAR(20), sex CHAR(1), birth DATE, death DATE);-- 查看数据表结构-- describe pet;desc pet;-- 查询表SELECT * from pet;-- 插入数据INSERT INTO pet VALUES (&#x27;puffball&#x27;, &#x27;Diane&#x27;, &#x27;hamster&#x27;, &#x27;f&#x27;, &#x27;1990-03-30&#x27;, NULL);-- 修改数据UPDATE pet SET name = &#x27;squirrel&#x27; where owner = &#x27;Diane&#x27;;-- 删除数据DELETE FROM pet where name = &#x27;squirrel&#x27;;-- 删除表DROP TABLE myorder; 主键约束123456789101112131415161718192021222324252627282930-- 主键约束-- 使某个字段不重复且不得为空，确保表内所有数据的唯一性。CREATE TABLE user ( id INT PRIMARY KEY, name VARCHAR(20));-- 联合主键-- 联合主键中的每个字段都不能为空，并且加起来不能和已设置的联合主键重复。CREATE TABLE user ( id INT, name VARCHAR(20), password VARCHAR(20), PRIMARY KEY(id, name));-- 自增约束-- 自增约束的主键由系统自动递增分配。CREATE TABLE user ( id INT PRIMARY KEY AUTO_INCREMENT, name VARCHAR(20));-- 添加主键约束-- 如果忘记设置主键，还可以通过SQL语句设置（两种方式）：ALTER TABLE user ADD PRIMARY KEY(id);ALTER TABLE user MODIFY id INT PRIMARY KEY;-- 删除主键ALTER TABLE user drop PRIMARY KEY; 唯一主键1234567891011121314-- 建表时创建唯一主键CREATE TABLE user ( id INT, name VARCHAR(20), UNIQUE(name));-- 添加唯一主键-- 如果建表时没有设置唯一建，还可以通过SQL语句设置（两种方式）：ALTER TABLE user ADD UNIQUE(name);ALTER TABLE user MODIFY name VARCHAR(20) UNIQUE;-- 删除唯一主键ALTER TABLE user DROP INDEX name; 非空约束123456789-- 建表时添加非空约束-- 约束某个字段不能为空CREATE TABLE user ( id INT, name VARCHAR(20) NOT NULL);-- 移除非空约束ALTER TABLE user MODIFY name VARCHAR(20); 默认约束12345678910-- 建表时添加默认约束-- 约束某个字段的默认值CREATE TABLE user2 ( id INT, name VARCHAR(20), age INT DEFAULT 10);-- 移除非空约束ALTER TABLE user MODIFY age INT; 外键约束123456789101112131415161718-- 班级CREATE TABLE classes ( id INT PRIMARY KEY, name VARCHAR(20));-- 学生表CREATE TABLE students ( id INT PRIMARY KEY, name VARCHAR(20), -- 这里的 class_id 要和 classes 中的 id 字段相关联 class_id INT, -- 表示 class_id 的值必须来自于 classes 中的 id 字段值 FOREIGN KEY(class_id) REFERENCES classes(id));-- 1. 主表（父表）classes 中没有的数据值，在副表（子表）students 中，是不可以使用的；-- 2. 主表中的记录被副表引用时，主表不可以被删除。","categories":[],"tags":[]}],"categories":[],"tags":[]}